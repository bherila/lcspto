@model lcspto_mvc.content

@{
    ViewBag.Title = "Create";
}

<h2>Create <b>New Page</b></h2>

@section head {
    <link rel="Stylesheet" type="text/css" href="@Url.Content("~/Assets/ElixCMS/css/Markdown.Editor.css")" />
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Assets/ElixCMS/js/Markdown.Converter.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Assets/ElixCMS/js/Markdown.Sanitizer.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Assets/ElixCMS/js/Markdown.Editor.js")" type="text/javascript"></script>

    <script type="text/javascript">
        jQuery(document).ready(function () {
            var cc = new Markdown.Converter(); // as opposed to Markdown.getSanitizingConverter();
            var ed = new Markdown.Editor(cc);
            ed.run();
        });
    </script>
}

@using (Html.BeginForm()) {
@Html.ValidationSummary(true)


    <div class="warning">Your changes will not be saved until you click <input type="submit" value="Save" /></div>

    <div class="editor-label">@Html.LabelFor(model => model.ParentPageName)</div>
    <div class="editor-field">
        @Html.EditorFor(model => model.ParentPageName)
        @Html.ValidationMessageFor(model => model.ParentPageName)
    </div>

    <div class="editor-label">@Html.LabelFor(model => model.PageName)</div>
    <div class="editor-field">
        @Html.EditorFor(model => model.PageName)
        @Html.ValidationMessageFor(model => model.PageName)
    </div>

    <div class="editor-label">@Html.LabelFor(model => model.HtmlTitle)</div>
    <div class="editor-field">
        @Html.EditorFor(model => model.HtmlTitle)
        @Html.ValidationMessageFor(model => model.HtmlTitle)
    </div>
    
    <div class="editor-label">@Html.LabelFor(model => model.LoginRequired)</div>
    <div class="editor-field">
        @Html.EditorFor(model => model.LoginRequired)
        @Html.ValidationMessageFor(model => model.LoginRequired)
    </div>

    <div class="editor-label">@Html.LabelFor(model => model.HtmlText)</div>

    <div class="wmd-panel">
        <div id="wmd-button-bar"></div>
        @Html.EditorFor(model => model.HtmlText, "MarkdownEditor")
    </div>

    @Html.ValidationMessageFor(model => model.HtmlText)


    
    <p><input type="submit" value="Save" /></p>
}

<div style="clear: both;"></div>

<div>@Html.ActionLink("Cancel", "Index")</div>

<hr size="1" />
<h2>Preview</h2>
<div id="wmd-preview" class="wmd-preview"></div>
